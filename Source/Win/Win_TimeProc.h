//==============================================================================
// Filename: Win_TimeProc.h
// Description: ウィンドウ内の時間処理
// Copyright (C) 2022 Silicon Studio Co., Ltd. All rights reserved.
//==============================================================================

#pragma once

//===== インクルード部 =====
#include <Win/Win_Framework.h>
#include <chrono>

namespace TimeProc {

    namespace Time = std::chrono;
    using GetTime = Time::system_clock;
    using TimeVal = GetTime::time_point;
}

//===== クラス定義 =====

//***** 時間計測クラス *****
class WinTime
{
public:

    //タイマクラス
    class Timer
    {
    public:

        //----------------------------------------------------------------------

        //----------------------------------------------------------------------
        /// コンストラクタ
        ///
        /// \return void
        //----------------------------------------------------------------------
        Timer() noexcept;

        //----------------------------------------------------------------------
        /// デストラクタ
        ///
        /// \return void
        //----------------------------------------------------------------------
        ~Timer() noexcept;

        //----------------------------------------------------------------------
        /// 更新処理
        ///
        /// \param[in] nFPS   実行中のFPSの値
        ///
        /// \return void
        //----------------------------------------------------------------------
        void Update(
            /*[in]*/ int nFPS) noexcept;

        //----------------------------------------------------------------------
        /// タイマリセット
        ///
        /// \return void
        //----------------------------------------------------------------------
        void Reset() noexcept;

        //----------------------------------------------------------------------
        /// タイマ時間取得
        ///
        /// \return void
        //----------------------------------------------------------------------
        int GetTime() const noexcept
        {
            return m_time;
        }

        //----------------------------------------------------------------------

    private:

        //----------------------------------------------------------------------
        int m_timerCnt;
        int m_time;
        //----------------------------------------------------------------------

        /// <summary>
        /// m_timerCnt  タイマカウンタ
        /// m_time      タイマ時間
        /// </summary>
    };

public:

    //--------------------------------------------------------------------------

    //--------------------------------------------------------------------------
    /// コンストラクタ
    ///
    /// \return void
    //--------------------------------------------------------------------------
    WinTime() noexcept;

    //--------------------------------------------------------------------------
    /// コンストラクタ
    ///
    /// \param[in] FPS  設定したいFPSの値
    ///
    /// \return void
    //--------------------------------------------------------------------------
    WinTime(
        /*[in]*/ int FPS) noexcept;

    //--------------------------------------------------------------------------
    /// デストラクタ
    ///
    /// \return void
    //--------------------------------------------------------------------------
    ~WinTime() noexcept;

    //--------------------------------------------------------------------------
    /// 更新処理
    ///
    /// \return void
    //--------------------------------------------------------------------------
    bool Update() noexcept;

    //--------------------------------------------------------------------------
    /// FPS取得(実測値)
    ///
    /// \return FPS(実測値)
    //--------------------------------------------------------------------------
    int GetFPS() const noexcept
    {
        return m_measFPS;
    }

    //--------------------------------------------------------------------------
    /// FPS取得(目標値)
    ///
    /// \return FPS(目標値)
    //--------------------------------------------------------------------------
    int GetTargetFPS() const noexcept
    {
        return m_FPS;
    }

    //--------------------------------------------------------------------------

private:

    //--------------------------------------------------------------------------
    TimeProc::TimeVal m_currentTime;
    TimeProc::TimeVal m_prevExecTime;
    long long m_execInterval;
    TimeProc::TimeVal m_prevMeasTime;
    long long m_measInterval;
    int m_measCnt;
    int m_measFPS;
    int m_FPS;
    int m_limiter;
    //--------------------------------------------------------------------------

    /// <summary>
    /// m_currentTime   現在時刻
    /// m_prevExecTime  前回実行時刻
    /// m_execInterval  実行間隔（マイクロ秒）
    /// m_prevMeasTime  前回FPS計測時刻
    /// m_measInterval  FPS計測間隔（ミリ秒）
    /// m_measCnt       計測カウンタ
    /// m_measFPS       FPS計測値
    /// m_FPS           FPS値
    /// m_limiter       FPS制限値（マイクロ秒）
    /// </summary>
};
